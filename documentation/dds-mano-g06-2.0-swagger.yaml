openapi: 3.0.0
info:
  version: '2.0'
  title: DDS TP Carbono TPA - G06
  description: Gestión de Organizaciones y el cálculo de la Huella de Carbono
servers:
  - url: https://api.ddsg06.com #cambiar
paths:
  /api/organizacion:
    get:
      summary: Organizaciones
      description: Mostrar todas las organizaciones
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
    post:
      summary: Organización
      description: Cargar una organización
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
  /api/organizacion/{id}:
    get:
      summary: Organización
      description: Mostrar la organización indicada
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
    put:
      summary: Organización
      description: Modificar la organización indicada
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
    delete:
      summary: Organización
      description: Borrar la organización indicada
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
  /api/organizacion/{id}/batch:
    get:
      summary: Batches de Mediciones
      description: Mostrar los batches de mediciones de la organización indicada
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
    post:
      summary: Batch de Mediciones
      description: Cargar un batch de mediciones para la organización indicada
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
  /api/organizacion/{orgId}/batch/{batchId}:
    get:
      summary: Batch de Mediciones
      description: Mostrar el batch de mediciones indicado de la organización indicada
      parameters: 
        - in: path
          name: orgId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: batchId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/BatchError'
    delete:
      summary: Batch de Mediciones
      description: Borrar el batch de mediciones indicado de la organización indicada
      parameters: 
        - in: path
          name: orgId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: batchId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags: 
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/BatchError'
  /api/organizacion/{id}/medicion:
    get:
      summary: Mediciones
      description: Mostrar las mediciones de la organización indicada
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/OrgError'
  /api/organizacion/{orgId}/medicion/{medicionId}:
    get:
      summary: Medición
      description: Mostrar la medición indicada de la organización indicada
      parameters: 
        - in: path
          name: orgId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: medicionId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MedicionError'
  /api/organizacion/{id}/medicion/unidad/{unidad}:
    get:
      summary: Medición
      description: Mostrar las mediciones de la organización indicada con cierta unidad de medida
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: unidad
          schema:
            $ref: '#/components/schemas/UnidadMedicion'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/UnidadError'
  /api/organizacion/{id}/medicion/valor/{valor}:
    get:
      summary: Medición
      description: Mostrar las mediciones de la organización indicada con cierto valor
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: valor
          schema:
            $ref: '#/components/schemas/ValorMedicion'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/ValorError'
  /api/organizacion/{orgId}/sector/{sectorId}/miembro:
    post:
      summary: Miembro
      description: Agregar un miembro al sector indicado de la organización indicada
      parameters: 
        - in: path
          name: orgId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: sectorId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      #requestBody
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/OrgSectorError'
  /api/organizacion/{id}/reporte:
    get:
      summary: Reporte
      description: Obtener el reporte de la organización indicada
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/OrgError'
  /api/miembro:
    get:
      summary: Miembros
      description: Mostrar todos los miembros
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
    post:
      summary: Miembro
      description: Cargar un nuevo miembro
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
  /api/miembro/{id}:
    put:
      summary: Miembro
      description: Modificar el miembro indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroError'
    delete:
      summary: Miembro
      description: Eliminar el miembro indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroError'
  /api/agente:
    get:
      summary: Agentes
      description: Obtener todos los agentes sectoriales
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
    post:
      summary: Agente
      description: Cargar un nuevo agente sectorial
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
  /api/agente/{id}:
    get:
      summary: Agente
      description: Obtener el agente sectorial indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/AgenteError'
    put:
      summary: Agente
      description: Modificar el agente sectorial indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/AgenteError'
    delete:
      summary: Agente
      description: Eliminar el agente sectorial indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/AgenteError'
  /api/agente/{id}/reporte:
    get:
      summary: Reporte
      description: Obtener el reporte del agente sectorial indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/AgenteError'
  /api/factorEmision:
    get:
      summary: Factor de Emisión
      description: Obtener los factores de emisión
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
    post:
      summary: Factor de Emisión
      description: Crear o modificar un factor de emisión
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
      #requestBody
  /api/trayecto/{id}:
    delete:
      summary: Trayecto
      description: Eliminar del sistema el trayecto indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/TrayectoError'
  /api/login:
    delete:
      summary: Sesión
      description: Iniciar sesión en el sistema
      tags:
        - API
      responses:
        '200':
          $ref: '#/components/responses/Exito'
          
  /home:
    get:
      summary: Inicio
      description: Pantalla de inicio para el login
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
  /menu:
    get:
      summary: Menu
      description: Pantalla de menu de operaciones
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
  /miembro/{id}/trayecto:
    get:
      summary: Trayectos
      description: Mostrar los trayectos del miembro indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: query
          name: action
          schema:
            $ref: '#/components/schemas/AccionTrayectos'
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroError'
    post:
      summary: Cargar Trayecto
      description: Cargar un trayecto para el miembro indicado
      parameters:
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: query
          name: compartido
          schema:
            $ref: '#/components/schemas/Boolean'
          required: true
        - in: query
          name: fecha
          schema: 
            $ref: '#/components/schemas/Fecha'
          required: true
        - in: query
          name: transporte
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: query
          name: parada
          schema:
            $ref: '#/components/schemas/Id'
          required: false
        - in: query
          name: lat-inicial
          schema:
            $ref: '#/components/schemas/Coor'
          required: false
        - in: query
          name: lon-inicial
          schema:
            $ref: '#/components/schemas/Coor'
          required: false
        - in: query
          name: lat-final
          schema:
            $ref: '#/components/schemas/Coor'  
          required: false
        - in: query
          name: lon-final
          schema:
            $ref: '#/components/schemas/Coor'
          required: false
        - in: query
          name: transporte-nuevo
          schema:
            $ref: '#/components/schemas/Id'
          required: false
        - in: query
          name: lat-inicial-nueva
          schema:
            $ref: '#/components/schemas/Coor'
          required: false
        - in: query
          name: lon-inicial-nueva
          schema:
            $ref: '#/components/schemas/Coor'
          required: false
        - in: query
          name: lat-final-nueva
          schema:
            $ref: '#/components/schemas/Coor'
          required: false
        - in: query
          name: lon-final-nueva
          schema:
            $ref: '#/components/schemas/Coor'
          required: false
        #FALTAN LAS DIRECCIONES!
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroError'
  /miembro/{id}/trayecto2: #FUSIONAR CON LA RUTA ANTERIOR
    get:
      summary: Trayecto
      description: Mostrar pantalla para cargar un trayecto para el miembro indicado
      parameters: 
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: query
          name: action
          schema:
            $ref: '#/components/schemas/AccionTrayectos'
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroError'
  /miembro/{miembroId}/trayecto/{trayectoId}:
    get:
      summary: Trayecto
      description: Mostrar el trayecto indicado del miembro indicado
      parameters: 
        - in: path
          name: miembroId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: trayectoId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: query
          name: action
          schema:
            $ref: '#/components/schemas/AccionTrayectos'
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroTrayectoError'
    post:
      summary: Modificar Trayecto
      description: Modificar el trayecto indicado del miembro indicado
      parameters: 
        - in: path
          name: miembroId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: trayectoId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        #PONER LOS QUERY STRINGS
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroTrayectoError'
    delete:
      summary: Borrar Trayecto
      description: Borrar el trayecto indicado del miembro indicado (no se elimina del sistema)
      parameters: 
        - in: path
          name: miembroId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: trayectoId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroTrayectoError'
  /miembro/{miembroId}/trayecto2/{trayectoId}: #FUSIONAR CON LA ANTERIOR
    get:
      summary: Trayecto
      description: Mostrar pantalla para editar el trayecto indicado del miembro indicado
      parameters: 
        - in: path
          name: miembroId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: path
          name: trayectoId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
        - in: query
          name: action
          schema:
            $ref: '#/components/schemas/AccionTrayectos'
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/MiembroTrayectoError'
  /organizacion/{id}/reporte:
    get:
      summary: Reporte
      description: Mostrar reporte generado para la organización indicada
      parameters: 
        - in: path
          name: id
          schema: 
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/OrgError'
        '401':
          $ref: '#/components/responses/NoAutenticado'
        '403':
          $ref: '#/components/responses/NoAutorizado'   
    post:
      summary: Generar Reporte
      description: Generar el reporte para la organización indicada
      parameters: 
        - in: path
          name: id
          schema: 
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/OrgError'
        '401':
          $ref: '#/components/responses/NoAutenticado'
        '403':
          $ref: '#/components/responses/NoAutorizado'
  /agente/{id}/reporte:
    get:
      summary: Reporte
      description: Mostrar reporte generado para el agente indicado
      parameters: 
        - in: path
          name: id
          schema: 
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/OrgError'
        '401':
          $ref: '#/components/responses/NoAutenticado'
        '403':
          $ref: '#/components/responses/NoAutorizado'   
    post:
      summary: Generar Reporte
      description: Generar el reporte para el agente indicado
      parameters: 
        - in: path
          name: id
          schema: 
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/OrgError'
        '401':
          $ref: '#/components/responses/NoAutenticado'
        '403':
          $ref: '#/components/responses/NoAutorizado'
  /agente/{id}/organizacion:
    get:
      summary: Organizaciones
      description: Mostrar las organizaciones del agente indicado
      parameters: 
        - in: path
          name: id
          schema: 
            $ref: '#/components/schemas/Id'
          required: true
      tags:
        - WEB
      responses:
        '200':
          $ref: '#/components/responses/Exito'
        '400':
          $ref: '#/components/responses/OrgError'
        '401':
          $ref: '#/components/responses/NoAutenticado'
        '403':
          $ref: '#/components/responses/NoAutorizado'  
components:
  responses:
    Exito:
      description: Response exitosa
    OrgError:
      description: Organizacion de id inexistente
    ReporteError:
      description: Reporte de id inexistente
    OrgRepError:
      description: Organización o reporte inexistente
    TrayectoError:
      description: Trayecto de id inexistente
    NoAutorizado:
      description: Acceso sin autorización
    NoAutenticado:
      description: Acceso sin usuario logueado
    BatchError:
      description: Batch de Mediciones de id inexistente
    MedicionError:
      description: Medición de id inexistente
    UnidadError:
      description: Unidad de medida errónea
    ValorError:
      description: Valor de medición erróneo
    OrgSectorError:
      description: Organización o Sector inexistente
    MiembroError:
      description: Miembro de id inexistente
    AgenteError:
      description: Agente Sectorial de id inexistente
    MiembroTrayectoError:
      description: Miembro o Trayecto de id inexistente
  schemas:
    Id:
      type: integer
      minimum: 0
    Coor:
      type: number
    Fecha:
      type: string
      description: mes/año
    Miembros:
      type: array
      items:
        type: object
    Transporte:
      type: object
    UnidadMedicion:
      type: string
      minLength: 1
      maxLength: 3
      description: unidad de medida
    ValorMedicion:
      type: number
    AccionTrayectos:
      type: string
      enum: [create, list, view]
    Boolean:
      type: boolean
    Direccion:
      type: string
      description: calles, provincias, municipios
tags: 
  - name: WEB
    description: Endpoints para la GUI
  - name: API
    description:  Endpoints para la API



# EJEMPLO DE DOCUMENTACION PARA ADAPTAR:

# openapi: "3.0.2"
# info:
#   title: "OpenWeatherMap API"
#   description: "Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results."
#   version: "2.5"
#   termsOfService: "https://openweathermap.org/terms"
#   contact:
#     name: "OpenWeatherMap API"
#     url: "https://openweathermap.org/api"
#     email: "some_email@gmail.com"
#   license:
#     name: "CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)"
#     url: "https://openweathermap.org/price"

# servers:
# - url: "https://api.openweathermap.org/data/2.5"

# paths:
#   /weather:
#     get:
#       tags:
#       - Current Weather Data
#       summary: "Call current weather data for one location"
#       description: "Access current weather data for any location on Earth including over 200,000 cities! Current weather is frequently updated based on global models and data from more than 40,000 weather stations."
#       operationId: CurrentWeatherData
#       parameters:
#         - $ref: '#/components/parameters/q'
#         - $ref: '#/components/parameters/id'
#         - $ref: '#/components/parameters/lat'
#         - $ref: '#/components/parameters/lon'
#         - $ref: '#/components/parameters/zip'
#         - $ref: '#/components/parameters/units'
#         - $ref: '#/components/parameters/lang'
#         - $ref: '#/components/parameters/mode'

#       responses:
#         "200":
#           description: Successful response
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/200'
#         "404":
#           description: Not found response
#           content:
#             text/plain:
#               schema:
#                 title: Weather not found
#                 type: string
#                 example: Not found
# security:
# - app_id: []

# tags:
#   - name: Current Weather Data
#     description: "Get current weather details"

# externalDocs:
#   description: API Documentation
#   url: https://openweathermap.org/api

# components:

#   parameters:
#     q:
#       name: q
#       in: query
#       description: "**City name**. *Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a searching word. For the query value, type the city name and optionally the country code divided by a comma; use ISO 3166 country codes."
#       schema:
#         type: string
#     id:
#       name: id
#       in: query
#       description: "**City ID**. *Example: `2172797`*. You can call by city ID. The API responds with the exact result. The List of city IDs can be downloaded [here](http://bulk.openweathermap.org/sample/). You can include multiple cities in this parameter &mdash; just separate them by commas. The limit of locations is 20. *Note: A single ID counts as a one API call. So, if you have city IDs, it's treated as 3 API calls.*"
#       schema:
#         type: string

#     lat:
#       name: lat
#       in: query
#       description: "**Latitude**. *Example: 35*. The latitude coordinate of the location of your interest. Must use with `lon`."
#       schema:
#         type: string

#     lon:
#       name: lon
#       in: query
#       description: "**Longitude**. *Example: 139*. Longitude coordinate of the location of your interest. Must use with `lat`."
#       schema:
#         type: string

#     zip:
#       name: zip
#       in: query
#       description: "**Zip code**. Search by zip code. *Example: 95050,us*. Please note that if the country is not specified, the search uses USA as a default."
#       schema:
#         type: string

#     units:
#       name: units
#       in: query
#       description: '**Units**. *Example: imperial*. Possible values: `standard`, `metric`, and `imperial`. When you do not use the `units` parameter, the format is `standard` by default.'
#       schema:
#         type: string
#         enum: [standard, metric, imperial]
#         default: "imperial"

#     lang:
#       name: lang
#       in: query
#       description: '**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
#       schema:
#         type: string
#         enum: [ar, bg, ca, cz, de, el, en, fa, fi, fr, gl, hr, hu, it, ja, kr, la, lt, mk, nl, pl, pt, ro, ru, se, sk, sl, es, tr, ua, vi, zh_cn, zh_tw]
#         default: "en"

#     mode:
#       name: mode
#       in: query
#       description: "**Mode**. *Example: html*. Determines the format of the response. Possible values are `json`, `xml`, and `html`. If the mode parameter is empty, the format is `json` by default."
#       schema:
#         type: string
#         enum: [json, xml, html]
#         default: "json"

#   schemas:
#     "200":
#       title: Successful response
#       type: object
#       properties:
#         coord:
#           $ref: '#/components/schemas/Coord'
#         weather:
#           type: array
#           items:
#             $ref: '#/components/schemas/Weather'
#           description: (more info Weather condition codes)
#         base:
#           type: string
#           description: Internal parameter
#           example: cmc stations
#         main:
#           $ref: '#/components/schemas/Main'
#         visibility:
#           type: integer
#           description: Visibility, meter
#           example: 16093
#         wind:
#           $ref: '#/components/schemas/Wind'
#         clouds:
#           $ref: '#/components/schemas/Clouds'
#         rain:
#           $ref: '#/components/schemas/Rain'
#         snow:
#           $ref: '#/components/schemas/Snow'
#         dt:
#           type: integer
#           description: Time of data calculation, unix, UTC
#           format: int32
#           example: 1435658272
#         sys:
#           $ref: '#/components/schemas/Sys'
#         id:
#           type: integer
#           description: City ID
#           format: int32
#           example: 2172797
#         name:
#           type: string
#           example: Cairns
#         cod:
#           type: integer
#           description: Internal parameter
#           format: int32
#           example: 200
#     Coord:
#       title: Coord
#       type: object
#       properties:
#         lon:
#           type: number
#           description: City geo location, longitude
#           example: 145.77000000000001
#         lat:
#           type: number
#           description: City geo location, latitude
#           example: -16.920000000000002
#     Weather:
#       title: Weather
#       type: object
#       properties:
#         id:
#           type: integer
#           description: Weather condition id
#           format: int32
#           example: 803
#         main:
#           type: string
#           description: Group of weather parameters (Rain, Snow, Extreme etc.)
#           example: Clouds
#         description:
#           type: string
#           description: Weather condition within the group
#           example: broken clouds
#         icon:
#           type: string
#           description: Weather icon id
#           example: 04n
#     Main:
#       title: Main
#       type: object
#       properties:
#         temp:
#           type: number
#           description: 'Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
#           example: 293.25
#         pressure:
#           type: integer
#           description: Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa
#           format: int32
#           example: 1019
#         humidity:
#           type: integer
#           description: Humidity, %
#           format: int32
#           example: 83
#         temp_min:
#           type: number
#           description: 'Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
#           example: 289.81999999999999
#         temp_max:
#           type: number
#           description: 'Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.'
#           example: 295.37
#         sea_level:
#           type: number
#           description: Atmospheric pressure on the sea level, hPa
#           example: 984
#         grnd_level:
#           type: number
#           description: Atmospheric pressure on the ground level, hPa
#           example: 990
#     Wind:
#       title: Wind
#       type: object
#       properties:
#         speed:
#           type: number
#           description: 'Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.'
#           example: 5.0999999999999996
#         deg:
#           type: integer
#           description: Wind direction, degrees (meteorological)
#           format: int32
#           example: 150
#     Clouds:
#       title: Clouds
#       type: object
#       properties:
#         all:
#           type: integer
#           description: Cloudiness, %
#           format: int32
#           example: 75
#     Rain:
#       title: Rain
#       type: object
#       properties:
#         3h:
#           type: integer
#           description: Rain volume for the last 3 hours
#           format: int32
#           example: 3
#     Snow:
#       title: Snow
#       type: object
#       properties:
#         3h:
#           type: number
#           description: Snow volume for the last 3 hours
#           example: 6
#     Sys:
#       title: Sys
#       type: object
#       properties:
#         type:
#           type: integer
#           description: Internal parameter
#           format: int32
#           example: 1
#         id:
#           type: integer
#           description: Internal parameter
#           format: int32
#           example: 8166
#         message:
#           type: number
#           description: Internal parameter
#           example: 0.0166
#         country:
#           type: string
#           description: Country code (GB, JP etc.)
#           example: AU
#         sunrise:
#           type: integer
#           description: Sunrise time, unix, UTC
#           format: int32
#           example: 1435610796
#         sunset:
#           type: integer
#           description: Sunset time, unix, UTC
#           format: int32
#           example: 1435650870

#   securitySchemes:
#     app_id:
#       type: apiKey
#       description: "API key to authorize requests. (If you don't have an API key, get one at https://openweathermap.org/. See https://idratherbewriting.com/learnapidoc/docapis_get_auth_keys.html for details.)"
#       name: appid
#       in: query